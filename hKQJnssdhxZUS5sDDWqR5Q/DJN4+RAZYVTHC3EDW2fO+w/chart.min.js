function getWorkloadValues(){xInput=document.getElementsByClassName("x"),x=copy(xInput)}function getV02MaxValues(){yInput=document.getElementsByClassName("y"),y=copy(yInput)}function copy(t){for(var e=[],n=0;n<t.length;n++)""!=t[n].value&&(e[n]=parseFloat(t[n].value));return e}function getMaximumValue(t){for(var e=-99999,n=0;n<t.length;n++)t[n]>=e&&(e=t[n]);return e}function getMinimumValue(t){for(var e=99999,n=0;n<t.length;n++)t[n]<=e&&(e=t[n]);return e}function grabInput(){getWorkloadValues(),getV02MaxValues(),sumX=sum(x),sumY=sum(y),sumX2=multiplySum(x,x),sumXY=multiplySum(x,y),sumY2=multiplySum(y,y),slope=(x.length*sumXY-sumX*sumY)/(x.length*sumX2-sumX*sumX),intercept=(sumY-slope*sumX)/x.length,lineX2=getMaximumValue(x),lineX1=getMinimumValue(x),maxY=getMaximumValue(y),lineY1=regression(0),lineY2=regression(lineX2);for(var t=0;t<x.length;t++)dataset.push([x[t],y[t]]);count=x.length==y.length?x.length:alert("X and Y list does not match!"),InitChart()}function multiplySum(t,e){for(var n=0,a=0;a<t.length;a++)n+=t[a]*e[a];return n}function sum(t){for(var e=0,n=0;n<t.length;n++)e+=parseFloat(t[n]);return e}function regression(t){return slope*t+intercept}function InitChart(){var t={top:20,right:20,bottom:20,left:50},e=700-t.left-t.right,n=500-t.top-t.bottom,a=[{x:0,y:lineY1},{x:lineX2,y:lineY2}],r=dataset,e=700-(t={top:20,right:20,bottom:20,left:50}).left-t.right,n=500-t.top-t.bottom,l=d3.scale.linear().domain([0,lineX2+5]).range([0,e]),s=d3.scale.linear().domain([0,5]).range([n,0]),u=d3.select("#visualisation").append("svg:svg").attr("width",e+t.right+t.left).attr("height",n+t.top+t.bottom).attr("class","chart").append("g").attr("transform","translate("+t.left+","+t.top+")").attr("width",e).attr("height",n).attr("class","main"),i=d3.svg.axis().scale(l).orient("bottom");u.append("g").attr("transform","translate(0,"+n+")").attr("class","main axis date").call(i);var o=d3.svg.axis().scale(s).orient("left");u.append("g").attr("transform","translate(0,0)").attr("class","main axis date").call(o);var m=u.append("svg:g");m.selectAll("scatter-dots").data(r).enter().append("svg:circle").attr("cx",function(t,e){return l(t[0])}).attr("cy",function(t){return s(t[1])}).attr("r",5,5).append("svg:title").text(function(t){return t});var p=d3.svg.line().x(function(t){return l(t.x)}).y(function(t){return s(t.y)}).interpolate("linear");m.append("svg:path").attr("d",p(a)).attr("stroke","red").attr("stroke-width",2).attr("fill","none").append("svg:title").text(function(t){return"Y-Intercept: "+intercept+", Slope: "+slope}),$("#datagrab").text("Y-Intercept: "+intercept+", X-Intercept: "+-intercept/slope+", Slope: "+slope+", R^2: "+correlation()+", Equation: Y = "+slope+"*X + "+intercept+", N = "+count)}function correlation(){var t=count*sumXY-sumX*sumY,e=Math.sqrt((count*sumX2-Math.pow(sumX,2))*(count*sumY2-Math.pow(sumY,2)));Math.floor(Math.pow(t/e,2))<.8&&alert("Are you sure the dataset is correct?")}function clearGraph(){$("#visualisation").empty(),xInput=0,yInput=0,x=[],y=[],ny=0,nx=0,count=0,sumX=0,sumY=0,sumY2=0,sumX2=0,sumXY=0,slope=0,xFinal=[],yFinal=[],lineY1=0,lineY2=0,lineX1=0,lineX=0,dataset=[]}var xInput,yInput,x=[],y=[],ny=0,nx=0,count,sumX=0,sumY=0,sumY2,sumX2,sumXY,slope=0,intercept,xFinal=[],yFinal=[],lineY1,lineY2,lineX1,lineX,dataset=[];
